name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Install Rust toolchain
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install cross-compilation dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          sudo apt-get install -y libssl-dev:arm64 # install the OpenSSL development libraries for aarch64
          rustup target add x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu x86_64-apple-darwin aarch64-apple-darwin
          # Set up environment variables for cross-compilation
          echo "PKG_CONFIG_SYSROOT_DIR=/usr/lib/aarch64-linux-gnu" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          echo "OPENSSL_DIR=/usr/lib/aarch64-linux-gnu" >> $GITHUB_ENV

      # Build for each target and rename the binaries
      - name: Build and Rename Binaries
        run: |
          VERSION=$(echo ${{ github.ref }} | cut -d'/' -f3)
          for TARGET in x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu x86_64-apple-darwin aarch64-apple-darwin; do
            OS=$(echo $TARGET | cut -d'-' -f2)
            ARCH=$(echo $TARGET | cut -d'-' -f1)
            cargo build --release --target $TARGET
            mv target/$TARGET/release/britify target/$TARGET/release/britify-$OS-$ARCH-$VERSION
          done

      # Create GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload binaries as release assets
      - name: Upload Release Assets
        run: |
          for TARGET in x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu x86_64-apple-darwin aarch64-apple-darwin; do
            OS=$(echo $TARGET | cut -d'-' -f2)
            ARCH=$(echo $TARGET | cut -d'-' -f1)
            VERSION=$(echo ${{ github.ref }} | cut -d'/' -f3)
            BIN_NAME=britify-$OS-$ARCH-$VERSION
            uses: actions/upload-release-asset@v1
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ./target/$TARGET/release/$BIN_NAME
              asset_name: $BIN_NAME
              asset_content_type: application/octet-stream
          done

      # rest of your steps...

      - name: Configure Git user
        run: |
          git config --global user.email "robot@britify.io"
          git config --global user.name "britify-bot"


      - name: Checkout Tap Repository
        uses: actions/checkout@v2
        with:
          repository: janekbaraniewski/homebrew-janekbaraniewski
          path: homebrew-janekbaraniewski

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.TAP_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Update Homebrew Formula
        run: |
          cd homebrew-janekbaraniewski/Formula
          sed -i "s|url .*|url \"https://github.com/janekbaraniewski/britify/releases/download/${{ github.ref }}/britify\"|" britify.rb
          sha256=$(shasum -a 256 ../../target/release/britify | cut -f1 -d' ')
          sed -i "s|sha256 .*|sha256 \"$sha256\"|" britify.rb
          git add britify.rb
          git commit -m "Update britify to ${{ github.ref }}"
          git push
